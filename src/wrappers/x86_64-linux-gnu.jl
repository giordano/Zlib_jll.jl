# Autogenerated wrapper script for Zlib_jll for x86_64-linux-gnu
export libz

## Global variables
PATH = ""
LIBPATH = ""
LIBPATH_env = "LD_LIBRARY_PATH"
LIBPATH_default = ""

# Relative path to `libz`
const libz_splitpath = ["lib", "libz.so"]

# This will be filled out by __init__() for all products, as it must be done at runtime
libz_path = ""

# libz-specific global declaration
# This will be filled out by __init__()
libz_handle = C_NULL

# This must be `const` so that we can use it with `ccall()`
const libz = "libz.so.1"


"""
Open all libraries
"""
function __init__()
    global artifact_dir = abspath(artifact"Zlib")

    # Initialize PATH and LIBPATH environment variable listings
    global PATH_list, LIBPATH_list

    global libz_path, libz_handle
    libz_path, libz_handle = get_lib_path_handle!(LIBPATH_list, artifact_dir, libz_splitpath)

    global PATH, LIBPATH
    PATH, LIBPATH = cleanup_path_libpath!(PATH_list, LIBPATH_list, ':')
    
end  # __init__()
